#!/bin/bash
#
# LOCAL_BIN="/usr/local/bin/get_lan_ipv4" && echo "" > "${LOCAL_BIN}" && vi "${LOCAL_BIN}" && chmod 0755 "${LOCAL_BIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile

if [ -n "$1" ] && [[ "$1" == *"log"* ]]; then # log this script's output

LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;

fi;
#
# ------------------------------------------------------------

THIS_LAN_IPV4="";
THIS_LAN_INET="";
THIS_LAN_NETMASK="";
THIS_LAN_BROADCAST="";

START_TIMESTAMP="$(date +'%Y%m%d_%H%M%S')";

TMP_LAN_INET="/tmp/get_lan_ipv4.${START_TIMESTAMP}.inet";
TMP_LAN_NETMASK="/tmp/get_lan_ipv4.${START_TIMESTAMP}.netmask";
TMP_LAN_BROADCAST="/tmp/get_lan_ipv4.${START_TIMESTAMP}.broadcast";

LOOPBACK_IPV4="127.0.0.1";

REGEX_IPV4='(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))';
SED_LINE='s/^\s*inet\s+'${REGEX_IPV4}'\s+netmask\s+'${REGEX_IPV4}'\s+broadcast\s+'${REGEX_IPV4}'\s*$/\0/p';
SED_INET='s/^\s*inet\s+'${REGEX_IPV4}'\s+netmask\s+'${REGEX_IPV4}'\s+broadcast\s+'${REGEX_IPV4}'\s*$/\1/p';
SED_NETMASK='s/^\s*inet\s+'${REGEX_IPV4}'\s+netmask\s+'${REGEX_IPV4}'\s+broadcast\s+'${REGEX_IPV4}'\s*$/\5/p';
SED_BROADCAST='s/^\s*inet\s+'${REGEX_IPV4}'\s+netmask\s+'${REGEX_IPV4}'\s+broadcast\s+'${REGEX_IPV4}'\s*$/\9/p';

ifconfig | while read EACH_LINE; do

	EACH_SED_LINE=$(echo "${EACH_LINE}" | sed --regexp-extended --quiet --expression="${SED_LINE}";);

	# Parse the LAN IPv4 ("inet") from the ifconfig string
	EACH_INET=$(echo "${EACH_LINE}" | sed --regexp-extended --quiet --expression="${SED_INET}";);

	if [ -n "${EACH_INET}" ] && [ "${EACH_INET}" != "${LOOPBACK_IPV4}" ]; then

		# If the parsed IPv4 is not a loopback IPv4, then save it
		echo "${EACH_INET}" > "${TMP_LAN_INET}";

		# Parse the Netmask & Broadcast from the ifconfig string
		EACH_NETMASK=$(echo "${EACH_LINE}" | sed --regexp-extended --quiet --expression="${SED_NETMASK}";);
		EACH_BROADCAST=$(echo "${EACH_LINE}" | sed --regexp-extended --quiet --expression="${SED_BROADCAST}";);
		if [ -n "${EACH_NETMASK}" ] && [ -n "${EACH_BROADCAST}" ]; then
			echo "${EACH_NETMASK}" > "${TMP_LAN_NETMASK}";
			echo "${EACH_BROADCAST}" > "${TMP_LAN_BROADCAST}";
		fi;

	fi;

done;

# Instantiate exported variables
test -f "${TMP_LAN_INET}" && export THIS_LAN_IPV4=$(cat "${TMP_LAN_INET}") && export THIS_LAN_INET=$(cat "${TMP_LAN_INET}") && rm "${TMP_LAN_INET}";
test -f "${TMP_LAN_NETMASK}" && export THIS_LAN_NETMASK=$(cat "${TMP_LAN_NETMASK}") && rm "${TMP_LAN_NETMASK}";
test -f "${TMP_LAN_BROADCAST}" && export THIS_LAN_BROADCAST=$(cat "${TMP_LAN_BROADCAST}") && rm "${TMP_LAN_BROADCAST}";

if [[ $# -gt 0 ]]; then
	if [ "$1" != "-quiet" ]; then
		echo "LAN IPv4      → ${THIS_LAN_IPV4}  (\$THIS_LAN_IPV4 or \$THIS_LAN_INET)";
		echo "LAN NetMask   → ${THIS_LAN_NETMASK}  (\$THIS_LAN_NETMASK)";
		echo "LAN Broadcast → ${THIS_LAN_BROADCAST}  (\$THIS_LAN_BROADCAST)";
	fi;
fi;

# ------------------------------------------------------------
