#!/bin/bash
#    Docker - List Volume Maps

# ------------------------------------------------------------
#
# Expanded using variable replacement:
#

test -n "$(docker --version | grep 'Docker version' 2>/dev/null)" && is_docker_installed=1 || is_docker_installed=0;
if [ "${is_docker_installed}" -eq 1 ]; then

clear;
echo "";
echo "Docker - Listing Active Volume-Maps...";
DASHES="------------------------------------------------------------";

TEXT_RESET='\e[0m';
TEXT_TEAL='\033[0;96m';
TEXT_RED='\033[0;31m'; # 
TEXT_COLORLESS='\033[0m'; # No Color

ROLLBACK_IFS="${IFS}"; IFS=$'\n'; # Set the global for-loop delimiter to newlines (ignore spaces)

docker inspect \
--format='{{println}}IMG:  {{.Config.Image}}Image:   {{range .Mounts}}{{println}}Map-Src: {{.Source}}  (Host){{println}}Map-Dst: {{.Destination}}  (Container){{end}}' \
$(docker ps --quiet) \
| while read EACH_VOLMAP; do
  echo "\$EACH_VOLMAP = \"${EACH_VOLMAP}\"";
  test -n "$(echo ${EACH_VOLMAP} | grep '^.*Container.*$' 2>'/dev/null';)" && echo -e "${TEXT_TEAL}${EACH_VOLMAP}${TEXT_RESET}" || echo "${EACH_VOLMAP}";
done;

IFS="${ROLLBACK_IFS}"; # Restore the global for-loop delimiter to whatever the value was at the start of this script's runtime

echo "";
echo "------------------------------------------------------------";

else
  echo "Docker is NOT installed";


fi;
echo "";


# ------------------------------------------------------------
#  Citation(s)
#
#  docs.docker.com  |  "Format command and log output"  |  https://docs.docker.com/config/formatting/
#
#  docs.docker.com  |  "docker inspect"  |  https://docs.docker.com/engine/reference/commandline/inspect/
#
#  misc.flogisoft.com  |  "Bash tips: Colors and formatting (ANSI/VT100 Control sequences)"  |  https://misc.flogisoft.com/bash/tip_colors_and_formatting
#
# ------------------------------------------------------------