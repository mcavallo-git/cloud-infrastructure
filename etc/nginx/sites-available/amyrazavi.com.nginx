# ------------------------------------------------------------
#
#==--  amyrazavi.com
#==--  *.amyrazavi.com
#
server {
  listen 80;
  listen 443 ssl http2;
  listen [::]:80;
  listen [::]:443 ssl http2;
  server_name amyrazavi.com *.amyrazavi.com;
  include "/etc/nginx/nginx_error_locations.conf";
  access_log "/var/log/nginx/access_amyrazavi.com.log" excessive;
  if ($scheme != "https") {
    return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
  }
  ssl_certificate "/etc/letsencrypt/live/amyrazavi.com/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/amyrazavi.com/privkey.pem";
  ssl_trusted_certificate "/etc/letsencrypt/live/amyrazavi.com/chain.pem";

  # ------------------------------------------------------------
  #                ~* [regex match, case-insensitive]
  if ($map_subdomain_uri ~* "^(cash|cashapp|pay){1,2}$") {
    return 302 "https://cash.me/hithereitsamy";
  }
  if ($map_subdomain_uri ~* "^(spotify){1,2}$") {
    return 302 "https://open.spotify.com/user/hello_itsamy";  # Spotify Profile
  }
  if ($map_subdomain_uri ~* "^(spotify){1,2}(/?(playlist/)?)?(1|lunatics|raving-lunatics)$") {
    return 302 "https://open.spotify.com/playlist/4PNNKXLxpecKR5RRtWl4gM?si=47ac07d233124b83";  # Spotify Playlist
  }
  if ($map_subdomain_uri ~* "^(spotify){1,2}(/?(playlist/)?)?(2|shower|shower-hollerin)$") {
    return 302 "https://open.spotify.com/playlist/6mYwZqVLsbduB5Nta874vb?si=03d594b249664cce";  # Spotify Playlist
  }
  if ($map_subdomain_uri ~* "^(spotify){1,2}(/?(playlist/)?)?(3|dance|wanna-dance)$") {
    return 302 "https://open.spotify.com/playlist/6Ctl8ygAgkMvsszmfq2BRj?si=561e738fbdf34fa6";  # Spotify Playlist
  }
  if ($map_subdomain_uri ~* "^(spotify){1,2}(/?(playlist/)?)?(4|workout)$") {
    return 302 "https://open.spotify.com/playlist/5v9ceIifWZ04TkmHvV2Gg4?si=ce4bd58b1fb74f7a";  # Spotify Playlist
  }
  if ($map_subdomain_uri ~* "^(venmo){1,2}$") {
    return 302 "https://venmo.com/hello_itsamy";
  }

  # ------------------------------------------------------------
  #                ~* [regex match, case-insensitive]
  if ($map_subdomain ~* "^(cash|cashapp|pay){1,2}$") {
    return 302 "https://cash.me/hithereitsamy";
  }
  if ($map_subdomain ~* "^(spotify){1,2}$") {
    return 302 "https://open.spotify.com/user/hello_itsamy";  # Spotify Profile
  }
  if ($map_subdomain ~* "^(venmo){1,2}$") {
    return 302 "https://venmo.com/hello_itsamy";
  }

  # ------------------------------------------------------------
  # Fallthrough Request Handler
  #  - Is overridden by any matched nginx statements which occurred earlier in the current nginx server {...} directive's block
  #
  location / {
    return 302 "https://cash.me/hithereitsamy";
  }

}


# ------------------------------------------------------------
### Enable NGINX Host
#
# DN="amyrazavi.com"; NG="/etc/nginx/sites-available/${DN}.nginx"; echo "" > ${NG}; vi ${NG}; ln -sf ${NG} /etc/nginx/sites-enabled/${DN}; reload_nginx;
#
#
# ------------------------------------------------------------
### Create/Renew SSL Certificate (Wildcard, Let's Encrypt using [ _acme-challenge ] TXT records)
#
# DN="amyrazavi.com"; certbot certonly --no-eff-email --manual --manual-public-ip-logging-ok --server https://acme-v02.api.letsencrypt.org/directory --preferred-challenges dns-01 -d "${DN}" -d "*.${DN}"; certbot certificates -d "${DN}"; test -x "/usr/local/sbin/reload_nginx" && /usr/local/sbin/reload_nginx;
#
#
# ------------------------------------------------------------
### Check SSL Certificate Expiration Date
#
# DN="amyrazavi.com"; echo | openssl s_client -servername "${DN}" -connect "${DN}:443" 2>'/dev/null' | openssl x509 -noout -dates | grep 'notAfter';
#
#
# ------------------------------------------------------------
### Remove Domain(s) & Revoke Certificate(s)
###   |--> Deletes NGINX Files & Symlinks
###   |--> Deletes LetsEncrypt Files
###   |--> Revokes Certificate thru LetsEncrypt (Invalidates the certificate on the Certificate-Authority's end)
#
# DN="amyrazavi.com"; certbot certificates; certbot revoke --cert-path "/etc/letsencrypt/live/${DN}/fullchain.pem"; certbot delete --cert-name "${DN}"; find "/etc/letsencrypt/" -name "*${DN}*"; unlink "/etc/nginx/sites-enabled/${DN}"; rm "/etc/nginx/sites-available/${DN}".nginx; certbot certificates;
#
#
# ------------------------------------------------------------
#
# Citation(s)
#
#   nginx.org  |  "Module ngx_http_rewrite_module"  |  https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if
#
#   stackoverflow.com  |  "How to get subdomain of URL in NGINX"  |  https://stackoverflow.com/a/39563133
#
#   stackoverflow.com  |  "how to use a variable inside a nginx “if” regular expression"  |  https://stackoverflow.com/a/5859926
#
# ------------------------------------------------------------