#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/uninstall_unifi" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
if [[ 0 -eq 1 ]]; then  # RUN THIS SCRIPT REMOTELY:


curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/uninstall_unifi?t=$(date +'%s.%N')" | bash;


fi;
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/uninstall_unifi_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/uninstall_unifi"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date --utc +'%Y%m%d')"; touch "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" ); printf -- '-%.0s' {1..10}; printf " Script started at [ $(date +'%Y-%m-%dT%H:%M:%S.%N%z';) ]\n";
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------
  #
  # Uninstall UniFi Network Controller
  #
  SERVICE_NAME="unifi";

  # ------------------------------------------------------------
  #
  # Require user-confirmation to perform this action
  #
  echo -e "\n""!! WARNING !! This will completely uninstall service \"${SERVICE_NAME}\" (including associated runtime user, usergroup, service(s), etc.)";
  read -p "     |--> Are you sure you want to continue?  (press 'y' to confirm)  " -n 1 -t 60 <'/dev/tty'; # Await single keypress
  echo "";
  if [ -n "${REPLY}" ] && [ "$(echo ${REPLY} | tr '[:lower:]' '[:upper:]';)" == "Y" ]; then
    REPLY="";
    read -p "     |--> Are you completely positive you want to continue?  (press 'y' to confirm)  " -n 1 -t 60 <'/dev/tty'; # Await single keypress
    echo "";
    if [ -n "${REPLY}" ] && [ "$(echo ${REPLY} | tr '[:lower:]' '[:upper:]';)" == "Y" ]; then
      # ------------------------------------------------------------
      #
      # Remove service's dependent package(s)
      #
      echo -e "\n""Info:  Removing software package(s) for ${SERVICE_NAME} service";
      if [ $(which dpkg 2>'/dev/null' | wc -l;) -gt 0 ]; then # Distros: Debian, Ubuntu, etc.
        echo "  |--> Calling [ dpkg -P \"${SERVICE_NAME}\"; ]...";
        dpkg -P "${SERVICE_NAME}";
      elif [[ -n "$(command -v apt 2>'/dev/null';)" ]]; then  # Distros: Debian, Ubuntu, etc.
        echo "  |--> Calling [ apt-get remove -y \"${SERVICE_NAME}\"; ]...";
        apt-get remove -y "${SERVICE_NAME}";
      elif [[ -n "$(command -v yum 2>'/dev/null';)" ]]; then  # Distros: Fedora, Oracle Linux, Red Hat Enterprise Linux, CentOS, etc.
        echo "  |--> Calling [ yum remove -y \"${SERVICE_NAME}\"; ]...";
        yum remove -y "${SERVICE_NAME}";
      else
        echo "  |--> Unable to determine package installer. Manual uninstallation of service \"${SERVICE_NAME}\" required";
      fi;
      echo "";
    fi;
  fi;
fi;

# ------------------------------------------------------------
#
# Citation(s)
#
#   help.ui.com  |  "UniFi - How to Uninstall the UniFi Network Controller â€“ Ubiquiti Networks Support and Help Center"  |  https://help.ui.com/hc/en-us/articles/360015373734-UniFi-How-to-Uninstall-the-UniFi-Network-Controller
#
# ------------------------------------------------------------