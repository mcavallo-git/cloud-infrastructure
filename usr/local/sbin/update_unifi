#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/update_unifi" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/update_unifi_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/update_unifi"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d')"; touch "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" ); printf -- '-%.0s' {1..10}; printf " Script started at [ $(date +'%Y-%m-%dT%H:%M:%S.%N%z';) ]\n";
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------

  SERVICE_NAME="unifi";
  SERVICE_RET_CODE=$(/bin/systemctl list-unit-files --no-legend --no-pager --full "${SERVICE_NAME}.service" | grep "^${SERVICE_NAME}.service" 1>'/dev/null' 2>&1; echo $?;);
  if [ ${SERVICE_RET_CODE} -eq 0 ]; then # Service exists locally

    # Show service status
    echo "";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Calling [ /usr/sbin/service \"${SERVICE_NAME}\" status --no-pager --full; ] (before potential update)...";
    /usr/sbin/service "${SERVICE_NAME}" status --no-pager --full;

    if [[ 1 -eq 1 ]]; then

      # Update Unifi Controller (via Bash convenience script)
      SOURCE_URL="https://get.glennr.nl/unifi/update/unifi-update.sh";
      FALLBACK_URL="https://raw.githubusercontent.com/mcavallo-git/Coding/master/ubiquiti/convenience-scripts/unifi-controller/unifi-update.sh";
      SOURCE_URL="${FALLBACK_URL}";
      TMP_FILE="/tmp/unifi-update.sh";
      echo "";
      echo "Info:  Calling  [ mkdir -p \"/tmp\"; if [ -f \"${TMP_FILE}\" ]; then rm -f \"${TMP_FILE}\"; fi; wget -O \"${TMP_FILE}\" \"${SOURCE_URL}\"; bash \"${TMP_FILE}\"; ]...";
      mkdir -p "/tmp"; if [ -f "${TMP_FILE}" ]; then rm -f "${TMP_FILE}"; fi; wget -O "${TMP_FILE}" "${SOURCE_URL}"; bash "${TMP_FILE}";

    else

      # Update UniFi
      echo "";
      echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Calling [ apt-get update -y; ]...";
      apt-get update -y;

      echo "";
      echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Calling [ echo \"unifi unifi/has_backup boolean true\" | debconf-set-selections; ]...";
      echo "unifi unifi/has_backup boolean true" | debconf-set-selections;

      echo "";
      echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Calling [ DEBIAN_FRONTEND=noninteractive apt-get install --only-upgrade unifi && /usr/sbin/service \"${SERVICE_NAME}\" restart; ]...";
      DEBIAN_FRONTEND=noninteractive apt-get install --only-upgrade unifi && /usr/sbin/service "${SERVICE_NAME}" restart;

    fi;

    # Show service status
    echo "";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Calling [ /usr/sbin/service \"${SERVICE_NAME}\" status --no-pager --full; ] (after potential update)...";
    /usr/sbin/service "${SERVICE_NAME}" status --no-pager --full;

  else # Service NOT found to exist as a local service
    echo "";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Update Skipped - Service \"${SERVICE_NAME}\" not found amongst local services";
  fi;

fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   help.ui.com  |  "UniFi - How to Install and Update via APT on Debian or Ubuntu â€“ Ubiquiti Networks Support and Help Center"  |  https://help.ui.com/hc/en-us/articles/220066768-UniFi-How-to-Install-Update-via-APT-on-Debian-or-Ubuntu
#
#   help.ui.com  |  "UniFi - Ports Used | Ubiquiti Networks Support and Help Center"  |  https://help.ui.com/hc/en-us/articles/218506997-UniFi-Ports-Used
#
#   sysinfo.io  |  "unifi-controller - sysinfo.io > scripts > linux > unifi-controller"  |  https://sysinfo.io/scripts/linux/unifi-controller/
#
#   manpages.ubuntu.com  |  "Ubuntu Manpage: ufw - program for managing a netfilter firewall"  |  https://manpages.ubuntu.com/manpages/bionic/man8/ufw.8.html
#
#   www.digitalocean.com  |  "How To Set Up a Firewall with UFW on Ubuntu 18.04 | DigitalOcean"  |  https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-18-04
#
# ------------------------------------------------------------