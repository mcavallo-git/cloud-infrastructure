#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/update_text_editor" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/update_text_editor_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/update_text_editor"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d')"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" ); printf -- '-%.0s' {1..10}; printf " Script started at [ $(date +'%Y-%m-%dT%H:%M:%S.%N%z';) ]\n";
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------

  SYSTEM_EDITOR_1_PATH="/usr/bin/editor";
  SYSTEM_EDITOR_2_PATH="/etc/alternatives/editor";

  DESIRED_EDITOR_NAME="vi";
  
  if [ -z "$(which ${DESIRED_EDITOR_NAME} 2>'/dev/null' 2>'/dev/null')" ]; then
    # Desired editor NOT installed --> Attempt to install it
    apt-get update -y;
    apt-get install -y "${DESIRED_EDITOR_NAME}";
  fi;

  if [ -z "$(which ${DESIRED_EDITOR_NAME} 2>'/dev/null' 2>'/dev/null')" ]; then
    # Desired editor STILL not installed (unable to be installed)
    echo "";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Unable to install \"${DESIRED_EDITOR_NAME}\"";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Global editor setting \"${SYSTEM_EDITOR_1_PATH}\" will remain set to: \"${SYSTEM_EDITOR_1_RESOLVED}\"";
    echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Global editor setting \"${SYSTEM_EDITOR_2_PATH}\" will remain set to: \"${SYSTEM_EDITOR_2_RESOLVED}\"";
    exit 1;

  else
    # Desired editor IS installed
    declare -a EDITOR_PATHS_TO_UPDATE=( \
      "${SYSTEM_EDITOR_1_PATH}" \
      "${SYSTEM_EDITOR_2_PATH}" \
    );
    # Replace each editor with desired editor (if needed
    for EACH_EDITOR_PATH in "${EDITOR_PATHS_TO_UPDATE[@]}"; do
      if [ ! -e "${EACH_EDITOR_PATH}" ]; then
        # Editor filepath doesn't exist, yet
        echo "";
        echo "$(date +'%Y-%m-%d %H:%M:%S') | Task: Creating new symbolic link from \"${EACH_EDITOR_PATH}\" to: \"$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))\"";
        ln --verbose --symbolic --force "$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))" "${EACH_EDITOR_PATH}";
      elif [ -L "${EACH_EDITOR_PATH}" ] && [ "$(realpath ${EACH_EDITOR_PATH})" != "$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))" ]; then
        # Editor filepath already exists and is a symbolic link to a DIFFERENT editor
        echo "";
        echo "$(date +'%Y-%m-%d %H:%M:%S') | Task: Removing symbolic link from \"${EACH_EDITOR_PATH}\" to \"$(realpath ${EACH_EDITOR_PATH})\"";
        unlink "${EACH_EDITOR_PATH}";
        echo "";
        echo "$(date +'%Y-%m-%d %H:%M:%S') | Task: Creating new symbolic link from \"${EACH_EDITOR_PATH}\" to: \"$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))\"";
        ln --verbose --symbolic --force "$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))" "${EACH_EDITOR_PATH}";
      elif [ -f "${EACH_EDITOR_PATH}" ] && [ ! -L "${EACH_EDITOR_PATH}" ] && [ "$(realpath ${EACH_EDITOR_PATH})" != "$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))" ]; then
        # Editor filepath already exists and is a NON-symbolic link  to a DIFFERENT editor
        echo "";
        mv --verbose "${EACH_EDITOR_PATH}" "${EACH_EDITOR_PATH}.replaced_with_${DESIRED_EDITOR_NAME}_on_$(date +'%Y%m%d_%H%M%S')";
        echo "";
        echo "$(date +'%Y-%m-%d %H:%M:%S') | Task: Creating new symbolic link from \"${EACH_EDITOR_PATH}\" to: \"$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))\"";
        ln --verbose --symbolic --force "$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))" "${EACH_EDITOR_PATH}";
      else 
        # Editor already exists as-intended - no update(s) necessary
        echo "";
        echo "$(date +'%Y-%m-%d %H:%M:%S') | Info: Skipped - \"${EACH_EDITOR_PATH}\" already points to \"$(realpath $(which ${DESIRED_EDITOR_NAME} 2>'/dev/null'))\"";
      fi;
    done;

    # Exit Gracefully
    echo "";
    echo "$(date '+%Y-%m-%d %H:%M:%S') | Info: Finished \"update_text_editor\"";
    echo "";
    exit 0;

  fi;
fi;
