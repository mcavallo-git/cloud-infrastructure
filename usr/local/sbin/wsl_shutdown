#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/wsl_shutdown" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/wsl_shutdown_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/wsl_shutdown"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo -n "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  #
  # Shutdown WSL (Windows Subsystem for Linux)
  #  |--> To shutdown WSL, signal to linux that a reboot is required by manually creating file '/var/run/reboot-required', otherwise the WSL linux environment persists the background as a service (and continues to consume hardware resources as-needed)
  #
  if [[ -n "$(uname -r 2>&1 | grep -i 'microsoft' 2>&1;)" ]]; then  
    ACTION_DESCRIPTION="Kill all WSL terminals";
    READ_TIMEOUT=60;
    read -p "Perform action [ ${ACTION_DESCRIPTION} ], now?  (press 'y' to confirm)  " -n 1 -t ${READ_TIMEOUT} <'/dev/tty'; RETURN_CODE_READ=$?;
    echo "";
    if [ ${RETURN_CODE_READ} -gt 128 ]; then
      echo "Error:  Response timed out after ${READ_TIMEOUT}s";
    elif [ -n "${REPLY}" ] && [[ $REPLY =~ ^[Yy]$ ]]; then
      echo "Info:  Confirmed - Performing Action [ ${ACTION_DESCRIPTION} ] ...";
      # Signal to linux that a reboot is required by manually creating file '/var/run/reboot-required'
      sudo touch "/var/run/reboot-required";
      if [[ 1 -eq 1 ]]; then
        # Call Windows Subsystem for Linux's built-in method to shutdown all WSL terminals (wsl --shutdown)
        /mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe "wsl --shutdown";
      else
        # Kill all bash shells (current shell as well as any other bash shells on local device)
        PROCESSES=$(ps -e -o pid,cmd);
        for EACH_PID in $(echo "${PROCESSES}" | sed -rne 's/^\s*([0-9]+)\s+(-bash)$/\1/p';); do
          echo "Calling [ kill -SIGKILL ${EACH_PID}; ]...";
          kill -SIGKILL ${EACH_PID};
        done;
      fi;
    else
      echo "Info:  Denied - Skipping action [ ${ACTION_DESCRIPTION} ]";
    fi;
  else
    # Exit - Non-WSL Environment detected
    echo "";
    echo "Info:  Skipping shutdown (unable to detect WSL environment)";
    echo "";
    exit 1;
  fi;
fi;