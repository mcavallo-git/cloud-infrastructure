#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_pup_html_parser" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
if [ 0 -eq 1 ]; then  # RUN THIS SCRIPT

curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/install_pup_html_parser?t=$(date +'%s.%N')" | bash;

fi;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
  echo "";
  echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------
  EXIT_CODE=1;
  if [ -n "$(command -v pup 2>'/dev/null';)" ]; then
    EXIT_CODE=0;
    echo "";
    echo "Info:  pup (command line HTML parser) already installed - getting version...";
    pup --version;
  else
    # ------------------------------------------------------------
    #
    # Install HTML parsing utilities (including 'pup')
    #
    # apt-get -y update;
    # apt-get -y install "libxml2-utils";

    # Get the latest available version of pup
    # echo "";
    # PUP_LATEST_VERSION="$(curl -sL 'https://github.com/EricChiang/pup/releases/latest' | grep -i '.zip' | grep -i 'pup_v' | grep -i '_linux_' | head -n 1 | sed -rne "s/^\s*<a href=\"\/pup\/([0-9\.]+)(\/|\").*$/\1/pi";)";
    # PUP_LATEST_VERSION="$(curl -sL 'https://github.com/EricChiang/pup/releases/latest' | grep -i 'pup_v0.4.0_linux_' | head -n 1 | sed -rne "s/^\s*<a href=\"\/pup\/([0-9\.]+)(\/|\").*$/\1/pi";)";
    # echo "PUP_LATEST_VERSION = [ ${PUP_LATEST_VERSION} ]";
    
    
    # TERRAFORM_LATEST_VERSION=$(curl -sL https://www.terraform.io/downloads.html | grep 'https://releases.hashicorp.com/terraform/' | grep -i 'linux' | head -n 1 | sed -re "s/^.+https:\/\/releases\.hashicorp\.com\/terraform\/([0-9\.]+)\/.+$/\1/";); echo "TERRAFORM_LATEST_VERSION = [ ${TERRAFORM_LATEST_VERSION} ]";

    # ------------------------------------------------------------
    if [ -n "$(command -v pup 2>'/dev/null';)" ]; then
      EXIT_CODE=0;
      echo "";
      echo "Info:  pup (command line HTML tool) installed - getting version...";
      pup --version;
    else
      EXIT_CODE=1;
      echo "";
      echo "Error:  Unable to install pup";
    fi;
  fi;
  exit ${EXIT_CODE};
fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   stackoverflow.com  |  "perl - Parsing HTML on the command line; How to capture text in <strong></strong>? - Stack Overflow"  |  https://stackoverflow.com/a/49764112
#
#   github.com  |  "GitHub - ericchiang/pup: Parsing HTML at the command line"  |  https://github.com/ericchiang/pup
#
# ------------------------------------------------------------