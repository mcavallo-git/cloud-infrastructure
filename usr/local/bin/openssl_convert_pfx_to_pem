#!/bin/bash
# ------------------------------------------------------------
if [[ 0 -eq 1 ]]; then # RUN THIS SCRIPT REMOTELY:

CERT_FULLPATH=""; CERT_PASSWORD=""; curl -H "Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" -ssL "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/bin/openssl_convert_pfx_to_pem?t=$(date --utc +'%s.%N';)" | bash -s -- "${CERT_FULLPATH}" "${CERT_PASSWORD}";

fi;
# ------------------------------------------------------------
#
# DONT USE GIT BASH  - USE WSL INSTEAD
#

if [ -n "${1}" ] && [ -f "${1}" ]; then

  read -p "Enter certificate password for file \"${1}\" (or hit enter for no password):  " -s -a CERT_PASS -t 60 <'/dev/tty'; echo "";


  # Convert from [ PFX (pkcs12) certificate format ] to [ Privacy-Enhanced Mail (PEM) certificate format ]

  openssl pkcs12 -in "${1}" -password "pass:${CERT_PASS}" -clcerts -nokeys | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > "${1}.crt.pem";
      echo "Certificate output path:    ${1}.crt.pem";

  openssl pkcs12 -in "${1}" -password "pass:${CERT_PASS}" -nocerts -nodes | sed -ne '/-BEGIN PRIVATE KEY-/,/-END PRIVATE KEY-/p' > "${1}.key.pem";
      echo "Private key output path:    ${1}.key.pem";

  openssl pkcs12 -in "${1}" -password "pass:${CERT_PASS}" -cacerts -nokeys | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > "${1}.chain.pem";
      echo "CA Bundle output path:      ${1}.chain.pem";

  cat "${1}.crt.pem" "${1}.chain.pem" > "${1}.fullchain.pem";
      echo "Fullchain output path:      ${1}.fullchain.pem";

fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   superuser.com  |  "linux - How to use password argument in via command line to openssl for decryption - Super User"  |  https://superuser.com/a/724987
#
#   unix.stackexchange.com  |  "openssl - How to export CA certificate chain from PFX in PEM format without bag attributes - Unix & Linux Stack Exchange"  |  https://unix.stackexchange.com/a/393484
#
#   www.paessler.com  |  "Using Your Own SSL Certificate with the PRTG Web Server | PRTG Manual"  |  https://www.paessler.com/manuals/prtg/using_your_own_ssl_certificate
#
# ------------------------------------------------------------