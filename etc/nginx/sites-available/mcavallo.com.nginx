# ------------------------------------------------------------
#
#==--  mcavallo.com
#==--  www.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	# server_name ~^(?<subdomain>\w+\.)?mcavallo\.com$;
	server_name ~^(?<subdomain>www\.)?mcavallo\.com$;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 "https://github.com/mcavallo-git/Coding#workstation-installs";
	}
	location /coding {
		return 302 "https://github.com/mcavallo-git/coding";
	}
	location /cloud-infrastructure {
		return 302 "https://github.com/mcavallo-git/cloud-infrastructure";
	}
	location /linux {
		return 302 "https://github.com/mcavallo-git/cloud-infrastructure";
	}
	location /pc {
		return 302 "https://pcpartpicker.com/user/cavalol/saved/7Q2Mcf";
	}
	location /repos {
		return 302 "https://github.com/mcavallo-git/repositories";
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  cashapp.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name cashapp.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://cash.me/mcavallo;
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  cv.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name cv.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	root /var/www/html/wordpress; # webroot
	index index.php;
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	location ~* \.php$ { #  *.php requests
		try_files $uri $uri/ /index.php?$args;
		fastcgi_read_timeout 120;
		fastcgi_index   index.php;
		include         fastcgi_params;
		fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		fastcgi_pass    unix:/run/php/php7.2-fpm.sock;
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  git.mcavallo.com
#==--  repos.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	# server_name git.mcavallo.com;
	server_name ~^(?<subdomain>git|repos\.)?mcavallo\.com$;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://github.com/mcavallo-git/repositories;
		# return 302 https://github.com/login?return_to=%2Fmcavallo-git%2Frepositories; # GitHub + Login
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  linkedin.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name linkedin.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://linkedin.com/in/matt-cavallo; # LinkedIn
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  linux.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name linux.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://github.com/mcavallo-git/cloud-infrastructure#sync_cloud_infrastructure; # GitHub
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  paypal.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name paypal.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://www.paypal.me/cavalol; # Note: https://paypal.me/cavalol/25 will request $25
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  resume.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name resume.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://cv.mcavallo.com;
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  sync.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name sync.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/sync_cloud_infrastructure;
	}
	location /sh {
		proxy_pass https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/sync_cloud_infrastructure;
		add_header Content-Type text/plain;
		#
		# curl -ssL "https://sync.mcavallo.com/sh?$(date +'%s.%N')" | bash;
		#
	}
	location /ps {
		proxy_pass https://raw.githubusercontent.com/mcavallo-git/Coding/master/sync.ps1;
		add_header Content-Type text/plain;
		#
		# Start-Process PowerShell.exe $(New-Object Net.WebClient).DownloadString('https://sync.mcavallo.com/ps') -Verb RunAs;
		#
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  venmo.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name venmo.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://venmo.com/cavalol;
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
#
#==--  windows.mcavallo.com
#
server {
	listen 80;
	listen 443 ssl http2;
	listen [::]:80;
	listen [::]:443 ssl http2;
	server_name windows.mcavallo.com;
	if ($scheme != "https") {
		return 301 https://$host$request_uri; # Force request-upgrade from HTTP(80) to HTTPS(443)
	}
	ssl_certificate "/etc/letsencrypt/live/mcavallo.com/fullchain.pem";
	ssl_certificate_key "/etc/letsencrypt/live/mcavallo.com/privkey.pem";
	ssl_trusted_certificate "/etc/letsencrypt/live/mcavallo.com/chain.pem";
	location / {
		return 302 https://github.com/mcavallo-git/Coding#workstation-installs;
	}
	include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
### Enable nginx host
#
# DN="mcavallo.com"; NG="/etc/nginx/sites-available/${DN}.nginx"; echo "" > ${NG}; vi ${NG}; ln -sf ${NG} /etc/nginx/sites-enabled/${DN}; reload_nginx;
#
# ------------------------------------------------------------
### Create LetsEncrypt Certs
#
# DN="mcavallo.com"; \
# certbot --nginx \
# -d ${DN} \
# -d cashapp.${DN} \
# -d cv.${DN} \
# -d git.${DN} \
# -d linkedin.${DN} \
# -d linux.${DN} \
# -d paypal.${DN} \
# -d resume.${DN} \
# -d repos.${DN} \
# -d sync.${DN} \
# -d venmo.${DN} \
# -d windows.${DN} \
# -d www.${DN} \
# ;
#
# ------------------------------------------------------------
### Rebuild NGINX host (to undo any changes certbot made)
#
# DN="mcavallo.com"; NG="/etc/nginx/sites-available/${DN}.nginx"; echo "" > ${NG}; vi ${NG}; ln -sf ${NG} /etc/nginx/sites-enabled/${DN}; reload_nginx;
#
# ------------------------------------------------------------
### Remove Domain & Cert
###   |--> Deletes NGINX Files & Symlinks
###   |--> Deletes LetsEncrypt Files
###   |--> Revokes Certificate thru LetsEncrypt (Invalidates the certificate on the Certificate-Authority's end)
#
# FQDN="mcavallo.com"; certbot revoke --cert-path "/etc/letsencrypt/live/${FQDN}/fullchain.pem"; certbot delete --cert-name "${FQDN}"; find "/etc/letsencrypt/" -name "*${FQDN}*"; unlink "/etc/nginx/sites-enabled/${FQDN}";
#
# ------------------------------------------------------------

# Citation(s)
#
#   serverfault.com  |  "Reply with 200 from Nginx config without serving a file"  |  https://serverfault.com/a/491817
#
# ------------------------------------------------------------