#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_kdump" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
if [[ 0 -eq 1 ]]; then # RUN THIS SCRIPT

curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/main/usr/local/sbin/install_kdump?t=$(date +'%s.%N')" | bash;

fi;
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------
  #
  # Install/setup kernel crash dump logging for use during RCA auditing workflows
  #
  SERVICE_NAME="kdump";

  # Search for one, specific service
  SERVICE_RET_CODE=$(/bin/systemctl list-unit-files --no-legend --no-pager --full "${SERVICE_NAME}.service" | grep "^${SERVICE_NAME}.service" 1>'/dev/null' 2>&1; echo $?;);
  echo "------------------------------------------------------------";
  if [ ${SERVICE_RET_CODE} -eq 0 ]; then # Service FOUND locally
    echo "";
    echo "Info:  Service \"${SERVICE_NAME}\" found to exist locally (skipping package-install)";
    /usr/sbin/service "${SERVICE_NAME}" status --no-pager --full;
  else # Service NOT found locally
    echo "";
    echo "Warning:  Service \"${SERVICE_NAME}\" not found locally";
    echo "";
    echo "Info:  Attempting to install the \"${SERVICE_NAME}\" package (for kernel crash dump logging) ...";
    if [ $(command -v ${SERVICE_NAME} 2>'/dev/null' | wc -l;) -eq 0 ]; then
      if [[ -n "$(command -v apt 2>'/dev/null';)" ]]; then  # Distros: Debian, Ubuntu, etc.
        apt-get -y install linux-crashdump;
      elif [[ -n "$(command -v yum 2>'/dev/null';)" ]]; then  # Distros: Fedora, Oracle Linux, Red Hat Enterprise Linux, CentOS, etc.
        yum -y install kexec-tools;
      fi;
    fi;
  fi;


  if [ -f "/etc/default/grub" ]; then
    #
    # Enabling Grub2's "crashkernel" setting
    #
    if [ $(cat '/etc/default/grub' | grep '^GRUB_CMDLINE_LINUX' | grep 'crashkernel=auto' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # Let user know config was already setup correctly
      echo "Info:  Skipping update for config file \"/etc/default/grub\" as it already contains 'GRUB_CMDLINE_LINUX=\"... crashkernel=auto ...\"' ";
    elif [ $(cat '/etc/default/grub' | grep '^GRUB_CMDLINE_LINUX' | grep 'crashkernel=' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # crashkernel already configured - replace it with auto
      sed -i".$(date +'%Y%m%d_%H%M%S').bak" -re "s/^(GRUB_CMDLINE_LINUX=\".*)crashkernel=[a-zA-Z0-9:,:@\-]+(.*\")\$/\1crashkernel=auto\2/" "/etc/default/grub";
    else
      # Add inline argument "... crashkernel=auto ..." to grub startup options
      sed -i".$(date +'%Y%m%d_%H%M%S').bak" -re "s/^(GRUB_CMDLINE_LINUX=\".+)\"\$/\1 crashkernel=auto\"/" "/etc/default/grub";
    fi;
  fi;


  if [ -f "/etc/kdump.conf" ]; then
    #
    # Enabling KDump's "path" setting
    #
    if [ $(cat '/etc/kdump.conf' | grep '^path /var/crash' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # Let user know config was already setup correctly
      echo "Info:  Skipping update for config file \"/etc/kdump.conf\" as it already contains 'path /var/crash' ";
    elif [ $(cat '/etc/kdump.conf' | grep '^path' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # crashkernel already configured - replace it with /var/crash
      sed -i".$(date +'%Y%m%d_%H%M%S').bak" -re '/^#?path/d' "/etc/kdump.conf";
      echo "path /var/crash" > "/etc/kdump.conf";
    else
      # Add inline argument "... crashkernel=auto ..." to grub startup options
      echo "path /var/crash" > "/etc/kdump.conf";
    fi;

    #
    # Enabling KDump's "default" setting
    #
    if [ $(cat '/etc/kdump.conf' | grep '^default dump_to_rootfs' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # Let user know config was already setup correctly
      echo "Info:  Skipping update for config file \"/etc/kdump.conf\" as it already contains 'default dump_to_rootfs' ";
    elif [ $(cat '/etc/kdump.conf' | grep '^default' 1>'/dev/null' 2>&1; echo $?;) -eq 0 ]; then
      # crashkernel already configured - replace it with dump_to_rootfs
      sed -i".$(date +'%Y%m%d_%H%M%S').bak" -re '/^#?default/d' "/etc/kdump.conf";
      echo "default dump_to_rootfs" > "/etc/kdump.conf";
    else
      # Add inline argument "... crashkernel=auto ..." to grub startup options
      echo "default dump_to_rootfs" > "/etc/kdump.conf";
    fi;
  fi;

  # Ensure that target service is enabled
  if [[ "$(systemctl is-enabled "${SERVICE_NAME}.service" 1>'/dev/null' 2>&1; echo $?;)" != "0" ]]; then
    systemctl enable "${SERVICE_NAME}.service" --now;  # --now also starts it immediately
  fi;

  # Ensure that target service is active
  if [[ "$(systemctl is-active "${SERVICE_NAME}.service" 1>'/dev/null' 2>&1; echo $?;)" != "0" ]]; then
    systemctl start "${SERVICE_NAME}.service";
  fi;

fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   access.redhat.com  |  "Chapter 7. Kernel crash dump guide Red Hat Enterprise Linux 7 | Red Hat Customer Portal"  |  https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/kernel_administration_guide/kernel_crash_dump_guide
#
#   help.ubuntu.com  |  "Kernel Crash Dump"  |  https://help.ubuntu.com/lts/serverguide/kernel-crash-dump.html
#
#   linux.die.net  |  "parted(8): partition change program - Linux man page"  |  https://linux.die.net/man/8/parted
#
#   opensource.com  |  "How to partition a disk in Linux | Opensource.com"  |  https://opensource.com/article/18/6/how-partition-disk-linux
#
#   unix.stackexchange.com  |  "mount - Is there a command to see where a disk is mounted? - Unix & Linux Stack Exchange"  |  https://unix.stackexchange.com/a/34772
#
# ------------------------------------------------------------