#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_docker" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo -n "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "${OSTYPE}" == "linux-gnu"* || "$(uname -s)" == "Linux" ]] && [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------
	if [[ "$(which get_os)" != "" && "$(get_os)" == *"Microsoft"* ]]; then
		# WSL Docker Installation

		# Update the source listing
		apt-get -y update;

		# Ensure that you have the binaries needed to fetch repo listing
		apt-get -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common;

		# Fetch the repository listing from docker's site & add it
		curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -;
		add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable";

		# Update source listing now that we've added Docker's repo
		apt-get -y update;

		# apt-get install docker-ce=17.09.0~ce-0~ubuntu;
		apt-get -y install docker-ce;

		if [ -v SUDO_USER ]; then
			usermod -aG docker $SUDO_USER;
		else
			usermod -aG docker $USER;
		fi;

	else # ------------------------------------------------------------
		# NON-WSL Docker Installation

		wget -qO- "https://get.docker.com/" | sh;
	
	fi;

fi;

# ------------------------------------------------------------
# Citation(s)
#
#   medium.com  |  "Docker Running Seamlessly in Windows Subsystem Linux"  |  https://medium.com/faun/docker-running-seamlessly-in-windows-subsystem-linux-6ef8412377aa
#
# ------------------------------------------------------------