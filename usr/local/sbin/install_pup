#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_pup" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
if [[ 0 -eq 1 ]]; then  # RUN THIS SCRIPT

curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/install_pup?t=$(date +'%s.%N')" | bash;

fi;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------
  EXIT_CODE=1;
  if [ -n "$(command -v pup 2>'/dev/null';)" ]; then
    EXIT_CODE=0;
    echo "";
    echo "Info:  pup (command line HTML parser) already installed - getting version...";
    echo -n "pup --version:  "; pup --version;
  else
    # ------------------------------------------------------------
    #
    # Install pup (command line HTML parser)
    #

    # Get the latest available version of pup
    ARCHITECTURE="$(dpkg --print-architecture;)";

    PUP_LATEST_VERSION="$(curl -sL 'https://github.com/ericchiang/pup/releases/latest' | grep '<a href=' | grep -i 'pup_v' | grep -i '_linux_' | grep -i '.zip' | grep -i "${ARCHITECTURE}" | head -n 1 | sed -rne "s/^\s*<a href=\"\/[^\"]+\/download\/v([0-9\.]+)(\/|\").*$/\1/pi";)"; echo "PUP_LATEST_VERSION = [ ${PUP_LATEST_VERSION} ]";

    PUP_LATEST_URL="https://github.com$(curl -sL 'https://github.com/ericchiang/pup/releases/latest' | grep '<a href=' | grep -i 'pup_v' | grep -i '_linux_' | grep -i '.zip' | grep -i "${ARCHITECTURE}" | head -n 1 | sed -rne "s/^\s*<a href=\"([^\"]+)\".*$/\1/pi";)"; echo "PUP_LATEST_URL = [ ${PUP_LATEST_URL} ]";

    FULLPATH_TMP_DIR="/tmp/install_pup_$(date +'%Y%m%d_%H%M%S')";
    FULLPATH_TMP_PUP="${FULLPATH_TMP_DIR}/pup_v${PUP_LATEST_VERSION}";
    FULLPATH_TMP_ZIP="${FULLPATH_TMP_PUP}.zip";

    FULLPATH_PUP="/usr/local/bin/pup";
    FULLPATH_VERSIONED_PUP="/usr/local/bin/pup-${PUP_LATEST_VERSION}";

    echo "";
    echo "Info:  Creating working directory \"${FULLPATH_TMP_DIR}\"...";
    mkdir --parents --verbose "${FULLPATH_TMP_DIR}";

    echo "";
    echo "Info:  Downloading pup v${PUP_LATEST_VERSION}'s archive to path \"${FULLPATH_TMP_ZIP}\"...";
    curl -sL "${PUP_LATEST_URL}" --output "${FULLPATH_TMP_ZIP}";

    echo "";
    echo "Info:  Unpacking archive \"${FULLPATH_TMP_ZIP}\" to directory \"${FULLPATH_TMP_DIR}\"...";
    cd "${FULLPATH_TMP_DIR}";
    gunzip --verbose --suffix ".zip" "$(basename ${FULLPATH_TMP_ZIP};)";

    echo "";
    echo "Info:  Setting file permissions to allow execution of pup binary \"${FULLPATH_TMP_PUP}\"...";
    chmod --verbose 0755 "${FULLPATH_TMP_PUP}";

    echo "";
    echo "Info:  Moving pup binary from \"${FULLPATH_TMP_PUP}\" to \"${FULLPATH_VERSIONED_PUP}\"...";
    mv --force --verbose "${FULLPATH_TMP_PUP}" "${FULLPATH_VERSIONED_PUP}";

    echo "";
    echo "Info:  Cleaning up working directory \"${FULLPATH_TMP_DIR}\"...";
    rm --recursive --force --verbose "${FULLPATH_TMP_DIR}";

    echo "";
    echo "Info:  Creating symbolic link from \"${FULLPATH_PUP}\" to \"${FULLPATH_VERSIONED_PUP}\"...";
    ln --symbolic --force --verbose "${FULLPATH_VERSIONED_PUP}" "${FULLPATH_PUP}";

    # ------------------------------------------------------------
    if [ -n "$(command -v pup 2>'/dev/null';)" ]; then
      EXIT_CODE=0;
      echo "";
      echo "Info:  pup (command line HTML parser) installed - getting version...";
      echo -n "pup --version:  "; pup --version;
    else
      EXIT_CODE=1;
      echo "";
      echo "Error:  Unable to install pup";
    fi;
  fi;
  exit ${EXIT_CODE};
fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   stackoverflow.com  |  "perl - Parsing HTML on the command line; How to capture text in <strong></strong>? - Stack Overflow"  |  https://stackoverflow.com/a/49764112
#
#   github.com  |  "GitHub - ericchiang/pup: Parsing HTML at the command line"  |  https://github.com/ericchiang/pup
#
# ------------------------------------------------------------