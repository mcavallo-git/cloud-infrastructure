#!/usr/bin/env bash
#
#    Pulls the details of the https-cert (if any) attached to a given hostname
#
if [ 0 -eq 1 ]; then # IF RUNNING A ONE-OFF, MANUALLY 


HOST_NAME="example.com"; HOST_PORT="443"; openssl s_client -showcerts -servername "${HOST_NAME}" -connect "${HOST_NAME}:${HOST_PORT}" </dev/null;


fi;


# ------------------------------------------------------------

# Hostname to-target
HOST_NAME="";
if [ -n "$1" ]; then
	HOST_NAME="$1";
else
	echo "";
	read -p "Enter HTTP Host (or pass as inline argument \$1):  " -t 60 -r;
	HOST_NAME="${REPLY}";
fi;


# Port to-target
if [ -n "$2" ]; then
	HOST_PORT="$2";
else
	echo "";
	echo "Defaulting to port 443 (call w/ port as inline argument \$2 to use another port)";
	echo "";
	HOST_PORT="443";
fi;

PROTO_STARTTLS="";
if [ "${HOST_PORT}" -eq "21" ]; then
	PROTO_STARTTLS="ftp";
fi;

echo "";
echo "SSL/TLS connection test"
echo "";
echo "Target Host: \"${HOST_NAME}\"";
echo "Target Port: \"${HOST_PORT}\"";
if [ -n "${PROTO_STARTTLS}" ]; then
	echo "";
	echo "Protocol Keyword:  \"${PROTO_STARTTLS}\"";
fi;
echo "";
echo "------------------------------------------------------------";
if [ -n "${PROTO_STARTTLS}" ]; then
	CERT_DETAILS=$(echo | openssl s_client -servername "${HOST_NAME}" -connect "${HOST_NAME}:${HOST_PORT}" -starttls ${PROTO_STARTTLS};);
else
	CERT_DETAILS=$(echo | openssl s_client -servername "${HOST_NAME}" -connect "${HOST_NAME}:${HOST_PORT}";);
fi;
echo "${CERT_DETAILS}";
echo "------------------------------------------------------------";
echo "";


# ------------------------------------------------------------
#	Citation(s)
#
#		stackoverflow.com  |  "Using openssl to get the certificate from a server"  |  https://stackoverflow.com/a/7886248
#
# ------------------------------------------------------------