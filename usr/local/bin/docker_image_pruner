#!/bin/bash
#    Docker Image-Pruner   -   by Cavalol
#         Prunes all Unused Docker-Images

printf "\nDocker Image-Pruner\n"


# Docker Images - Prune (Remove) all Unused Images
count_prunable_images=$(docker images --all --quiet | wc -l);
# count_prunable_images=$(docker images --filter "dangling=true" --quiet | wc -l);
# count_prunable_skipOS_images=$(docker images --all | grep -v 'IMAGE' | grep -v 'centos' | grep -v  'openjdk' | grep -v  'postgres' | grep -v  'sonarqube' | awk '{print $3}' | wc -l);
printf "[ ${count_prunable_images:-0} ] Dangling Images - ";
if [[ "${count_prunable_images:-0}" -gt "0" ]]; then
  printf "Performing PRUNE on all Dangling Images...\n";
  # docker rmi --force $(docker images --all | grep -v 'IMAGE' | grep -v 'centos' | grep -v  'openjdk' | grep -v  'postgres' | grep -v  'sonarqube' | awk '{print $3}';);
  # docker rmi --force $(docker images --all | grep -v 'IMAGE' | awk '{print $3}';);
  docker rmi --force $(docker images --all --quiet;) 2>'/dev/null';
  printf "\n";
else
  printf "No Action Necessary\n";
fi;
