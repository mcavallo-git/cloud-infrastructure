#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_jenkins" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
# Sync 1-Liner ( See:  https://github.com/mcavallo-git/cloud-infrastructure/blob/master/README.md )
#
if [ 0 -eq 1 ]; then

wget "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/install_jenkins" -O "/usr/local/sbin/install_jenkins" -q && chmod 0755 "/usr/local/sbin/install_jenkins" && /usr/local/sbin/install_jenkins --all;

fi;
#
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------
	# Instantiate runtime variables
	
	EXIT_CODE=1;

	APT_PKG_JDK="default-jdk-headless";
	APT_PKG_JRE="default-jre-headless";
	APT_PKG_JENKINS="jenkins";

	START_SECONDS_NANOSECONDS=$(date +'%s.%N');
	START_EPOCHSECONDS=$(echo ${START_SECONDS_NANOSECONDS} | cut --delimiter '.' --fields 1);
	# START_NANOSECONDS=$(echo ${START_SECONDS_NANOSECONDS} | cut --delimiter '.' --fields 2 | cut --characters 1-9);
	# START_MICROSECONDS=$(echo ${START_NANOSECONDS} | cut --characters 1-6);
	# START_MILLISECONDS=$(echo ${START_NANOSECONDS} | cut --characters 1-3);
	START_DATETIME="$(date --date=@${START_EPOCHSECONDS} +'%Y-%m-%d %H:%M:%S')";
	START_TIMESTAMP="$(date --date=@${START_EPOCHSECONDS} +'%Y%m%d_%H%M%S')";

	SERVICE_NAME="jenkins"; \
	SERVICE_MATCHES=$(service --status-all 2>/dev/null | grep 'jenkins'); \

	# ------------------------------------------------------------
	# Determine if Jenkins is already installed
	if [ $(apt list --installed 2>/dev/null | grep -h "^${APT_PKG_JENKINS}\/" | wc -l) -eq 0 ]; then
	# if [ "$(service --status-all 2>/dev/null | grep 'jenkins')" == "" ]; then

		# Install Java Development Kit (Jenkins Pre-Requisite)
		if [ "$(echo "$(apt list --installed 2>/dev/null;)" | grep -h "^${APT_PKG_JDK}\/" | wc -l)" != "0" ]; then
			echo -e "\n""Info: Installing Java Development Kit";
			echo -e "  |--> Calling  [ apt-get -y update && apt-get -y install \"${APT_PKG_JDK}\"; ]  ...""\n";
			apt-get -y update && apt-get -y install "${APT_PKG_JDK}";
		fi;

		# Install Java Runtime Environment (Jenkins Pre-Requisite)
		if [ "$(echo "$(apt list --installed 2>/dev/null;)" | grep -h "^${APT_PKG_JRE}\/" | wc -l)" != "0" ]; then
			echo -e "\n""Info: Installing Java Runtime Environment";
			echo -e "  |--> Calling  [ apt-get -y update && apt-get -y install \"${APT_PKG_JRE}\"; ]  ...""\n";
			apt-get -y update && apt-get -y install "${APT_PKG_JRE}";
		fi;

		# Install Jenkins
		if [ "$(echo "$(apt list --installed 2>/dev/null;)" | grep -h "^${APT_PKG_JENKINS}\/" | wc -l)" != "0" ]; then
			# Download Jenkins' GnuPG Public-Key (to match & verify jenkins' download/repository against)
			JENKINS_GPG_KEY_URL="https://pkg.jenkins.io/debian-stable/jenkins.io.key";
			wget -q -O - "${JENKINS_GPG_KEY_URL}" | apt-key add -;
			# Setup Jenkins' package repository in APT
			JENKINS_APT_SOURCE_FILEPATH="/etc/apt/sources.list.d/jenkins.list";
			JENKINS_APT_SOURCE_CONTENTS="deb https://pkg.jenkins.io/debian-stable binary/";
			if [ ! -f "/etc/apt/sources.list.d/jenkins.list" ] || [ "$(cat ${JENKINS_APT_SOURCE_FILEPATH})" != "${JENKINS_APT_SOURCE_CONTENTS}" ]; then
				echo "${JENKINS_APT_SOURCE_CONTENTS}" > "${JENKINS_APT_SOURCE_FILEPATH}";
			fi;
			# Install the Jenkins package from newly added package-repo
			echo -e "\n""Info: Installing Jenkins";
			echo -e "  |--> Calling  [ apt-get -y update && apt-get -y install \"${APT_PKG_JENKINS}\"; ]  ...""\n";
			apt-get -y update && apt-get -y install "${APT_PKG_JENKINS}";

		fi;

	else
		# Jenkins is already installed
		echo -e "\n""Info: Jenkins already installed";

	fi;

	if [ "$(service --status-all 2>/dev/null | grep 'jenkins')" == "" ]; then
		# Jenkins-Service STILL not detected after install-attempt
		EXIT_CODE=1;
		echo -e "\n""Error: Jenkins service not detected after install attempt";

	else
		EXIT_CODE=0;
		
		# ------------------------------------------------------------
		# Show the status of the Jenkins-Service
		echo -e "\n""Info: Showing Jenkins' Service-Status";
		echo -e "  |--> Calling  [ service jenkins status; ]  ...""\n";
		service jenkins status;

		# ------------------------------------------------------------
		# Show Jenkins' Ports which are in-use
		echo -e "\n""Info: Showing Jenkins' Ports which are in-use";
		echo -e "  |--> Calling  [ ps aux | grep 'jenkins' | grep -v 'color=auto' | grep 'httpPort'; ]  ...""\n";
		ps aux | grep 'jenkins' | grep -v 'color=auto' | grep 'httpPort';

		echo "";

	fi;

	if [ -f "/etc/default/jenkins" ]; then
		echo -e "\n""Info: Downloading Jenkins-Config from source-repository";
		echo -e "  |--> Check filepath \"/etc/default/jenkins\" for updated confit (referenced by jenkins at service start / restart time)""\n";
		mv "/etc/default/jenkins" "/etc/default/jenkins.${START_TIMESTAMP}.bak";
		wget "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/etc/default/jenkins" -O "/etc/default/jenkins" -q;
		chmod 0644 "/etc/default/jenkins";
	fi;


	exit ${EXIT_CODE};

fi;

# ------------------------------------------------------------
# Citation(s)
#
#   jenkins.io  |  "Jenkins | Build great things at any scale"  |  https://jenkins.io
#
#   digitalocean.com  |  "How To Install Jenkins on Ubuntu 16.04"  |  https://www.digitalocean.com/community/tutorials/how-to-install-jenkins-on-ubuntu-16-04
#
# ------------------------------------------------------------