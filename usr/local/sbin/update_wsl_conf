#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/update_wsl_conf" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------
if [[ 0 -eq 1 ]]; then # RUN THIS SCRIPT REMOTELY:

curl -H "Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" -sL "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/update_wsl_conf?t=$(date +'%s.%N')" | bash;

fi;
# ------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/update_wsl_conf_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/update_wsl_conf"; fi;
mkdir -p "${LOGDIR}"; chown "$(stat -c '%u:%g' "$(dirname "${LOGDIR}";)";)" "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date --utc +'%Y%m%d';)"; touch "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" ); printf -- '-%.0s' {1..10}; printf " Script started at [ $(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) ]\n";
exec 2>&1;
#
# ------------------------------
#
# Script must run as root or via sudo
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  #
  # Setup '/etc/wsl.conf' for WSL2 distros (e.g. Windows Subsystem for Linux distributions)
  #  |
  #  |--> Used to configure settings on a per-distribution basis.
  #  |
  #  |--> Settings configured in this file will only be applied to the specific Linux distribution that contains the directory where this file is stored.
  #
  if [[ -n "$(uname -r 2>&1 | grep -i 'microsoft' 2>&1;)" ]]; then
    WSL_RESTART_REQUIRED=0;
    if [[ -z "$(command -v powershell.exe 2>'/dev/null';)" ]]; then
      # Create a symbolic link allowing "powershell.exe" to be resolved within WSL
      WINDOWS_POWERSHELL_EXE_PATH="$(wslpath -u "$(wslvar --sys "windir";)/System32/WindowsPowerShell/v1.0/powershell.exe";)";
      LINUX_POWERSHELL_EXE_PATH="/usr/local/bin/powershell.exe";
      ln -sf "${WINDOWS_POWERSHELL_EXE_PATH}" "${LINUX_POWERSHELL_EXE_PATH}";
    fi;
    if [[ ! -f "/etc/wsl.conf" ]]; then
      echo -e "\n[network]\ngenerateResolvConf = false\n" > "/etc/wsl.conf";
      WSL_RESTART_REQUIRED=1;
    fi;
    # Use Powershell's "Get-DnsClientServerAddress" cmdlet to get the primary DNS server used by the Windows host
    WINDOWS_DNS_SERVER="$(powershell.exe -Command 'Get-DnsClientServerAddress | Where-Object { ${_}.Address -NE $Null; } | Where-Object { ${_}.ElementName -NotLike "*Loopback*"; } | Select-Object -First 1 -ExpandProperty "Address" | Select-Object -First 1;' | sed -e "/^\s*$/d" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//';)";
    if [[ -n "${WINDOWS_DNS_SERVER}" ]]; then
      if [[ -h "/etc/resolv.conf" ]]; then
        unlink "/etc/resolv.conf";
      fi;
      if [[ -f "/etc/resolv.conf" ]]; then
        rm -fv "/etc/resolv.conf";
      fi;
      # Apply the primary Windows DNS server to WSL
      echo "nameserver ${WINDOWS_DNS_SERVER}" > "/etc/resolv.conf";
      WSL_RESTART_REQUIRED=1;
    fi;
    # ------------------------------
    # Report the outcome (and if a WSL restart is necessary)
    echo "";
    if [[ "${WSL_RESTART_REQUIRED}" -ne 0 ]]; then
      echo "Info:  WSL restart required - please run [ wsl --shutdown ], then reopen a WSL terminal, and rerun this script to complete WSL configuration";
    else
      echo "Info:  No changes needed - Configuration already up-to-date";
    fi;
    echo "";
  else
    # ------------------------------
    # Exit - Non-WSL Environment detected
    echo "";
    echo "Info:  Skipping configuration of '/etc/wsl.conf' (unable to detect WSL environment)";
    echo "";
    exit 1;
  fi;
fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   docs.microsoft.com  |  "Advanced settings configuration in WSL | Microsoft Docs"  |  https://docs.microsoft.com/en-us/windows/wsl/wsl-config
#
#   gist.github.com  |  "Fix DNS resolution in WSL2 Â· GitHub"  |  https://gist.github.com/coltenkrauter/608cfe02319ce60facd76373249b8ca6#file-fix-wsl2-dns-resolution
#
# ------------------------------------------------------------