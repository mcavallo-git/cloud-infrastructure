# ------------------------------------------------------------
#
#==--  curl.rest
#
server {
  listen 80;
  listen 443 ssl http2;
  listen [::]:80;
  listen [::]:443 ssl http2;
  server_name curl.rest *.curl.rest;
  access_log "/var/log/nginx/access_curl.rest.log" thin;
  if ($scheme != "https") {
    return 301 https://${host}${request_uri};  # Force request-upgrade from HTTP(80) to HTTPS(443)
  }
  ssl_certificate "/etc/letsencrypt/live/curl.rest/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/curl.rest/privkey.pem";
  ssl_trusted_certificate "/etc/letsencrypt/live/curl.rest/chain.pem";
  location / {
    try_files https://sh.mcavallo.com${request_uri} https://sh.mcavallo.com/usr/local/bin${request_uri} https://sh.mcavallo.com/usr/local/sbin${request_uri};
    # return 302 https://sh.mcavallo.com${request_uri};
  }
  include "/etc/nginx/nginx_error_locations.conf";
}


# ------------------------------------------------------------
### Enable NGINX Host
#
# DN="curl.rest"; NG="/etc/nginx/sites-available/${DN}.nginx"; echo "" > ${NG}; vi ${NG}; ln -sf ${NG} /etc/nginx/sites-enabled/${DN}; reload_nginx;
#
#
# ------------------------------------------------------------
### Create/Renew SSL Certificate (Wildcard, Let's Encrypt using [ _acme-challenge ] TXT records)
#
# DN="curl.rest"; certbot certonly --no-eff-email --manual --manual-public-ip-logging-ok --server https://acme-v02.api.letsencrypt.org/directory --preferred-challenges dns-01 -d "${DN}" -d "*.${DN}"; certbot certificates -d "${DN}"; test -x "/usr/local/sbin/reload_nginx" && /usr/local/sbin/reload_nginx;
#
#
# ------------------------------------------------------------
### Check SSL Certificate Expiration Date
#
# DN="curl.rest"; echo | openssl s_client -servername "${DN}" -connect "${DN}:443" 2>'/dev/null' | openssl x509 -noout -dates | grep 'notAfter';
#
#
# ------------------------------------------------------------
### Remove Domain & Revoke Certificate(s)
###   |--> Deletes NGINX Files & Symlinks
###   |--> Deletes LetsEncrypt Files
###   |--> Revokes Certificate thru LetsEncrypt (Invalidates the certificate on the Certificate-Authority's end)
#
# DN="curl.rest"; certbot certificates; certbot revoke --cert-path "/etc/letsencrypt/live/${DN}/fullchain.pem"; certbot delete --cert-name "${DN}"; find "/etc/letsencrypt/" -name "*${DN}*"; unlink "/etc/nginx/sites-enabled/${DN}"; rm "/etc/nginx/sites-available/${DN}".nginx; certbot certificates;
#
#
# ------------------------------------------------------------
#
# Citation(s)
#
#   nginx.org  |  "Module ngx_http_rewrite_module"  |  https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if
#
#   stackoverflow.com  |  "How to get subdomain of URL in NGINX"  |  https://stackoverflow.com/a/39563133
#
#   stackoverflow.com  |  "how to use a variable inside a nginx “if” regular expression"  |  https://stackoverflow.com/a/5859926
#
# ------------------------------------------------------------