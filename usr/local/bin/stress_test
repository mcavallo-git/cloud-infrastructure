#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/stress_test" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------
if [[ 0 -eq 1 ]]; then # RUN THIS SCRIPT REMOTELY:

curl -H "Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" -sL "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/bin/stress_test?t=$(date +'%s.%N')" | bash;

fi;
# ------------------------------

if [[ -z "$(command -v stress 2>'/dev/null';)" ]]; then
  apt-get -y update;
  apt-get -y install stress;
fi;

EVAL_COMMAND="";
EVAL_COMMAND+="stress ";
EVAL_COMMAND+="--cpu ${STRESS_CPU_THREADS:-2} ";
EVAL_COMMAND+="--io ${STRESS_IO_THREADS:-1} ";
EVAL_COMMAND+="--vm ${STRESS_MEMORY_THREADS:-1} ";
EVAL_COMMAND+="--vm-bytes ${STRESS_MEMORY_THREAD_BYTES:-128M} ";
EVAL_COMMAND+="--timeout ${STRESS_TIMEOUT:-3600} ";
EVAL_COMMAND+="--verbose ";
EVAL_COMMAND+=";";

echo "$(date +'%Y-%m-%d %H:%M:%S') | Info:  Calling [ ${EVAL_COMMAND} ]...";
eval "${EVAL_COMMAND}";


# ------------------------------
# Example stress call:
# -c 2 : Spawn two workers spinning on sqrt()
# -i 1 : Spawn one worker spinning on sync()
# -m 1 : Spawn one worker spinning on malloc()/free()
# --vm-bytes 128M : Malloc 128MB per vm worker (default is 256MB)
# -t 10s : Timeout after ten seconds
# -v : Be verbose

# stress --cpu 2 --io 1 --vm 1 --vm-bytes 128M --timeout 10s;


# ------------------------------------------------------------
#
# Citation(s)
#
#   linustechtips.com  |  "Linux CPU Stress testing and temperature recording - Linux, macOS and Everything Not-Windows - Linus Tech Tips"  |  https://linustechtips.com/main/topic/277966-linux-cpu-stress-testing-and-temperature-recording/?tab=comments#comment-3770257
#
#   www.cyberciti.biz  |  "Stress Test CPU and Memory (VM) On a Linux / Unix With Stress-ng - nixCraft"  |  https://www.cyberciti.biz/faq/stress-test-linux-unix-server-with-stress-ng/
#
# ------------------------------------------------------------