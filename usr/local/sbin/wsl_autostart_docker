#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/wsl_autostart_docker" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------
if [[ 0 -eq 1 ]]; then # RUN THIS SCRIPT REMOTELY:

curl -H "Cache-Control: no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" -ssL "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/wsl_autostart_docker?t=$(date +'%s.%N')" | bash;

fi;
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/wsl_autostart_docker_logs"; if [[ -w "/var/log/" ]]; then LOGDIR="/var/log/wsl_autostart_docker"; fi;
mkdir -p "${LOGDIR}"; chown "$(stat -c '%u:%g' "$(dirname "${LOGDIR}";)";)" "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date --utc +'%Y%m%d';)"; touch "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
# ------------------------------

EXIT_CODE=0;

SERVICE_NAME="docker";

# ------------------------------
#
# Script must run as root (or via sudo)
#
if [[ "$(id -un)" != "root" ]]; then
  echo "";
  echo "$(date --utc +'%Y-%m-%dT%H:%M:%S.%NZ';) Error: Script must run as user \"root\" or via \"sudo\" command";
  EXIT_CODE=$(( ${EXIT_CODE:-0} + 1 ));
else

  FULLPATH_SERVICE_AUTOSTART="/etc/profile.d/wsl_autostart_${SERVICE_NAME}.sh";

  ACTION_DESCRIPTION="Apply auto-start for service '${SERVICE_NAME}' via file '${FULLPATH_SERVICE_AUTOSTART}'";

  if [[ -n "$(uname -r 2>&1 | grep -i 'microsoft' 2>&1;)" ]]; then
    #
    # WSL environment detected - Apply service auto-start
    #
    echo "";
    echo "Info:  Performing action [ ${ACTION_DESCRIPTION} ]...";
    echo "";
    WSL_EXE="$(WIN_EXE="wsl.exe"; if [ -n "$(command -v ${WIN_EXE} 2>'/dev/null';)" ]; then echo "$(realpath "$(command -v "${WIN_EXE}";)" 2>'/dev/null';)"; elif [ -f "$(find /mnt/*/Windows/System32/${WIN_EXE} -mindepth 0 -maxdepth 0 -type f | head -n 1;)" ]; then find /mnt/*/Windows/System32/${WIN_EXE} -mindepth 0 -maxdepth 0 -type f | head -n 1; else echo "$(realpath "$(wslpath -u "$(wslvar -s "windir";)";)/System32/${WIN_EXE}";)"; fi;)"; # Get absolute path to wsl.exe
    sudo /bin/sh -c " echo 'if [ \$(/usr/sbin/service ${SERVICE_NAME} status 2>&1 | grep -c -i \"not running\";) -ne 0 ]; then\n  # Auto-start service [ ${SERVICE_NAME} ] whenever a bash terminal is opened\n  \"${WSL_EXE}\" -d \$(/usr/bin/wslpath -w / | cut -d\\\\\\ -f4;) -u root -e /usr/sbin/service ${SERVICE_NAME} start 1>/dev/null 2>&1;\nfi;' > '${FULLPATH_SERVICE_AUTOSTART}'"; # Apply service auto-start
  else
    #
    # Error - Non-WSL environment detected
    #
    echo "";
    echo "Error:  Non-WSL environment/OS detected";
    echo " |";
    echo " |--> Skipping action [ ${ACTION_DESCRIPTION} ]";
    echo "";
    EXIT_CODE=$(( ${EXIT_CODE:-0} + 1 ));
  fi;
fi;

# Exit cleanly
exit ${EXIT_CODE:-0};

# ------------------------------------------------------------
#
# Citation(s)
#
#   github.com  |  "Q: Identify distro from within distro, under WSL · Issue #4479 · microsoft/WSL · GitHub"  |  https://github.com/microsoft/WSL/issues/4479#issuecomment-876698799
#
# ------------------------------------------------------------