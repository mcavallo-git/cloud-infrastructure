#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/reload_nginx" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo -n "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
  echo "";
  echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
  exit 1;
else
  # ------------------------------------------------------------
  SERVICE_NAME="nginx";
  SYSCTL_NAME="${SERVICE_NAME}.service";
  SYSCTL_HEALTH_CHECK_EXIT_CODE=$(/bin/systemctl list-sockets 1>'/dev/null' 2>&1; echo ${?};);
  if [ ${SERVICE_EXISTS_EXIT_CODE} -eq 1 ]; then


  else

    SERVICE_EXISTS_EXIT_CODE=$(/bin/systemctl list-unit-files --no-legend --no-pager --full "${SYSCTL_NAME}" | grep "^${SYSCTL_NAME}" 1>'/dev/null' 2>&1; echo ${?};);
    SERVICE_STATUS_EXIT_CODE=$(/bin/systemctl status "${SYSCTL_NAME}" 1>'/dev/null' 2>&1; echo ${?};);

    echo "SERVICE_EXISTS_EXIT_CODE=[ ${SERVICE_EXISTS_EXIT_CODE} ]";
    echo "SERVICE_STATUS_EXIT_CODE=[ ${SERVICE_STATUS_EXIT_CODE} ]";

    if [ ${SERVICE_EXISTS_EXIT_CODE} -eq 1 ]; then
      # Service NOT found to exist locally
      echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Systemctl is unresponsive (is this a Windows Machine? If yes, please use NGINX for Windows)";
      exit 1;
    else
      if [ ${SERVICE_STATUS_EXIT_CODE} -eq 3 ]; then
        echo "$(date +'%Y-%m-%d %H:%M:%S') | $(basename ${0}): NGINX Service not started - Starting it, now...";
        /bin/systemctl status "${SYSCTL_NAME}"
      fi;

      if [ -f "/run/${SERVICE_NAME}.pid" ]; then
        # Service found to exist locally - Restart the service
        echo "$(date +'%Y-%m-%d %H:%M:%S') | $(basename ${0}): Reloading NGINX Service...";
        nginx -t && sleep 1 && /bin/systemctl reload-or-restart "${SYSCTL_SNAME}";
        SYSCTL_RESTART_EXIT_CODE=${?};
      else
        # Get PIDs (Process-IDs) for any non-primary/rogue nginx runtime(s)
        MATCHED_PROCS_PS=$(ps --format "pid,fname,user,%cpu,%mem,maj_flt,cmd" --no-headers -U "www-data" | wc -l;);
        # PID_ROGUE_NGINX_INSTANCE=$(netstat -nlp | grep :80 | grep nginx | awk '{print $7}' | cut -d/ -f 1;);
        if [ -n "${MATCHED_PROCS_PS}" ]; then
          # Snipe rogue nginx PIDs
          echo "$(date +'%Y-%m-%d %H:%M:%S') | $(basename ${0}): Killing Rogue NGINX Instance...";
          # kill "${PID_ROGUE_NGINX_INSTANCE}";
        fi;
        # Start nginx service, again
        echo "$(date +'%Y-%m-%d %H:%M:%S') | $(basename ${0}): Starting NGINX Service...";
        nginx -t && sleep 1 && /bin/systemctl reload-or-restart "${SYSCTL_SNAME}";
      fi;
    fi;

  fi;
fi;
