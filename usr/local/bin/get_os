#!/bin/bash
#
# LOCAL_BIN="/usr/local/bin/get_os" && echo "" > "${LOCAL_BIN}" && vi "${LOCAL_BIN}" && chmod 0755 "${LOCAL_BIN}";
#
# ------------------------------------------------------------
# Run in Debug mode
#
if [ 0 -eq 1 ]; then

env DEBUG_MODE=1 "/usr/local/sbin/get_os";

fi;
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile

if [ -n "$1" ] && [[ "$1" == *"log"* ]]; then # log this script's output

LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;

fi;

# ------------------------------------------------------------
#
# Verbosity setting as an argument
#
VERBOSE="0";
if [ -n "$1" ]; then
	if [ "$1" == "-v" ] || [ "$1" == "--verbose" ]; then
		VERBOSE="1";
	fi;
fi;

# ------------------------------------------------------------
#
# OS (Operating System) Details
#
if [[ "${OSTYPE}" == "linux-gnu"* || "$(uname -s)" == "Linux" ]]; then
	if [ $(uname -a | grep -i 'Microsoft' | wc -l) -ge 1 ]; then
		THIS_OS_TYPE='WSL';
	else
		THIS_OS_TYPE='LINUX';
	fi;
elif [[ "${OSTYPE}" == "darwin"* ]]; then
	THIS_OS_TYPE='MAC';
else
	THIS_OS_TYPE='WINDOWS';
fi;


# ------------------------------------------------------------
#
# Linux Distro (Distribution) Details
#
if [ -n "$(which lsb_release)" ]; then
	DISTRO_ID="$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)";
	DISTRO_RELEASE="$(lsb_release --short --release | tr '[:lower:]' '[:upper:]';)";
	DISTRO_CODENAME="$(lsb_release --short --codename | tr '[:lower:]' '[:upper:]';)";
	DISTRO_DESCRIPTION="$(lsb_release --short --description | tr '[:lower:]' '[:upper:]';)";

else
	DISTRO_ID=""
	DISTRO_RELEASE="";
	DISTRO_CODENAME="";
	DISTRO_DESCRIPTION="";

fi;


# ------------------------------------------------------------
#
# Kernel Info
#
THIS_KERNEL="$(uname -a;)";
THIS_KERNEL_NAME="$(uname -s;)";


IS_WINDOWS=$(if [ "${THIS_OS_TYPE}" == "WINDOWS" ]; then echo 1; else echo 0; fi;);
IS_LINUX=$(if [ "${THIS_OS_TYPE}" == "LINUX" ]; then echo 1; else echo 0; fi;);
IS_MAC=$(if [ "${THIS_OS_TYPE}" == "MAC" ]; then echo 1; else echo 0; fi;);
IS_WSL=$(if [ "${THIS_OS_TYPE}" == "WSL" ]; then echo 1; else echo 0; fi;);

IS_CYGWIN=$(if [[ $(uname -s | grep -i CYGWIN | wc -l) -gt 0 ]] || [ "${OSTYPE}" == "cygwin" ]; then echo 1; else echo 0; fi;);
IS_MINGW=$(if [[ $(uname -s | grep -i MINGW | wc -l) -gt 0 ]] || [ "${OSTYPE}" == "msys" ]; then echo 1; else echo 0; fi;);

if [ -n "${DISTRO_ID}" ]; then
	# Directly-compare the current OS' Distro-ID against known values runtime
	IS_ALPINE=$(if [ "$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)" == "ALPINE" ]; then echo 1; else echo 0; fi;);
	IS_CENTOS=$(if [ "$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)" == "CENTOS" ]; then echo 1; else echo 0; fi;);
	IS_DEBIAN=$(if [ "$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)" == "DEBIAN" ]; then echo 1; else echo 0; fi;);
	IS_RASPBIAN=$(if [ "$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)" == "RASPBIAN" ]; then echo 1; else echo 0; fi;);
	IS_UBUNTU=$(if [ "$(lsb_release --short --id | tr '[:lower:]' '[:upper:]';)" == "UBUNTU" ]; then echo 1; else echo 0; fi;);

else
	# Manually determine Distro-type
	IS_ALPINE=$(if [[ $(ls -al /etc | grep -i release | wc -l) -gt 0 ]] && [[ $(cat /etc/*release | grep -i alpine | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi;);
	IS_CENTOS=$(if [[ $(ls -al /etc | grep -i release | wc -l) -gt 0 ]] && [[ $(cat /etc/*release | grep -i centos | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi;);
	IS_DEBIAN=$(if [[ $(ls -al /etc | grep -i release | wc -l) -gt 0 ]] && [[ $(cat /etc/*release | grep -i debian | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi;);
	IS_RASPBIAN=$(if [[ $(ls -al /etc | grep -i release | wc -l) -gt 0 ]] && [[ $(cat /etc/*release | grep -i raspbian | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi;);
	IS_UBUNTU=$(if [[ $(ls -al /etc | grep -i release | wc -l) -gt 0 ]] && [[ $(cat /etc/*release | grep -i ubuntu | wc -l) -gt 0 ]]; then echo 1; else echo 0; fi;);

fi;

# Get this host's shell-distro
THIS_DISTRO="UNKNOWN";
if [[ ${IS_WINDOWS} -gt 0 ]]; then
	# Windows shell-distro(s)
	if [[ ${IS_CYGWIN} -gt 0 ]]; then
		THIS_DISTRO="CYGWIN";
	elif [[ ${IS_MINGW} -gt 0 ]]; then
		THIS_DISTRO="MINGW";
	fi;
elif [[ ${IS_LINUX} -gt 0 ]] || [[ ${IS_WSL} -gt 0 ]]; then
	# Linux shell-distro(s)
	if [[ ${IS_RASPBIAN} -gt 0 ]]; then
		THIS_DISTRO="RASPBIAN";
	elif [[ ${IS_CENTOS} -gt 0 ]]; then
		THIS_DISTRO="CENTOS";
	elif [[ ${IS_UBUNTU} -gt 0 ]]; then
		THIS_DISTRO="UBUNTU";
	elif [[ ${IS_ALPINE} -gt 0 ]]; then
		THIS_DISTRO="ALPINE";
	elif [[ ${IS_DEBIAN} -gt 0 ]]; then
		THIS_DISTRO="DEBIAN";
	fi;
fi;

# Set the final OS value (to return)
THIS_OS="${THIS_OS_TYPE}, ${THIS_DISTRO}";

if [ "${VERBOSE}" == "1" ]; then
	echo "";
	echo "THIS_OS=${THIS_OS}";
	echo "THIS_OS_TYPE=${THIS_OS_TYPE}";
	echo "THIS_DISTRO=${THIS_DISTRO}";
	echo "";
	echo "IS_WINDOWS=${IS_WINDOWS}";
	echo "IS_LINUX=${IS_LINUX}"; \
	echo "IS_MAC=${IS_MAC}"; \
	echo "IS_WSL=${IS_WSL}"; \
	echo "";
	echo "IS_RASPBIAN=${IS_RASPBIAN}"; \
	echo "IS_CENTOS=${IS_CENTOS}"; \
	echo "IS_UBUNTU=${IS_UBUNTU}"; \
	echo "IS_ALPINE=${IS_ALPINE}"; \
	echo "IS_DEBIAN=${IS_DEBIAN}"; \
	echo "IS_CYGWIN=${IS_CYGWIN}"; \
	echo "IS_MINGW=${IS_MINGW}";
	echo "";
fi;

echo "${THIS_OS}";

#	------------------------------------------------------------
#	Citation(s)
#
#		stackexchange.com  |  "How can I reliably get the operating system's name?"  |  https://unix.stackexchange.com/a/92218
#
#		stackoverflow.com  |  "How to detect the OS from a Bash script?"  |  https://stackoverflow.com/a/8597411
#
#	------------------------------------------------------------