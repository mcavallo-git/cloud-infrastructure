#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/archive_logs" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------

if [ 0 -eq 1 ]; then

# Download & run this script on-the-fly:
curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/archive_logs?$(date +'%s.%N')" | bash;

# Run the local copy of this script:
bash "${HOME}\Documents\GitHub\cloud-infrastructure\usr\local\sbin\archive_logs";

fi;

# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo -n "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;
#
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------

	SVC="httpd";

	INAME="*_log-*";

	DIR_LOGS="/var/log/${SVC}";

	DIR_ARCH="/mnt/resource/log.bak/${SVC}";

	for EACH_FILE in $(find "${DIR_ARCH}/" -type f -name "${INAME}"); do

		BASENAME=$(basename "${EACH_FILE}");

		PATH_LOGS="${DIR_LOGS}/${BASENAME}"; 

		PATH_ARCH="${DIR_ARCH}/${BASENAME}";

		if [ -e "${PATH_LOGS}" ] && [ ! -e "${PATH_ARCH}" ]; then

			echo "Calling [ mv \"${PATH_LOGS}\" \"${PATH_ARCH}\"; ] ...";
			mv "${PATH_LOGS}" "${PATH_ARCH}";

			echo "Calling [ chmod 0400 \"${PATH_ARCH}\"; ] ...";
			chmod 0400 "${PATH_ARCH}";

			echo "Calling [ ln -sf \"${PATH_ARCH}\" \"${PATH_LOGS}\"; ] ...";
			ln -sf "${PATH_ARCH}" "${PATH_LOGS}";

		fi;

	done;

	BASENAME="ssl_error_log-20191104"; PATH_LOGS="${DIR_LOGS}/${BASENAME}"; PATH_ARCH="${DIR_ARCH}/${BASENAME}"; if [ -e "${PATH_LOGS}" ] && [ ! -e "${PATH_ARCH}" ]; then mv "${PATH_LOGS}" "${PATH_ARCH}"; chmod 0400 "${PATH_ARCH}"; ln -sf "${PATH_ARCH}" "${PATH_LOGS}"; fi;

fi;
