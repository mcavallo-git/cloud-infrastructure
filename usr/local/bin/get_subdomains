#!/bin/bash
#
# LOCAL_BIN="/usr/local/bin/get_subdomains" && echo "" > "${LOCAL_BIN}" && vi "${LOCAL_BIN}" && chmod 0755 "${LOCAL_BIN}";
#
# ------------------------------------------------------------
#
# Log all shell output & error output to logfile
#
if [ -n "$2" ] && [[ "$2" == *"log"* ]]; then # log this script's output

LOGDIR="${HOME}/$(basename ${0})_logs"; if [ -w "/var/log/" ]; then LOGDIR="/var/log/$(basename ${0})"; fi;
mkdir -p "${LOGDIR}"; chown $(stat -c '%u:%g' $(dirname ${LOGDIR})) "${LOGDIR}"; chmod 0770 "${LOGDIR}";
LOGFILE="${LOGDIR}/$(basename ${LOGDIR})_$(date +'%Y%m%d_%H%M%S')"; echo "" > "${LOGFILE}"; chmod 0660 "${LOGFILE}";
exec > >(tee -a "${LOGFILE}" );
exec 2>&1;

fi;
#
# ------------------------------------------------------------

if [ -z "${1}" ]; then

	echo -e "\nError in call to \"get_subdomains\"\n  → Expected syntax:     >  get_subdomains HOSTNAME;\n";
	exit 1;

else

	REGEX_IPV4='(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))';
	SED_LINE='s/^(.+),'${REGEX_IPV4}'$/\0/p';
	SED_FQDN='s/^(.+),'${REGEX_IPV4}'$/\1/p';
	SED_IPV4='s/^(.+),'${REGEX_IPV4}'$/\2/p';

	SMOKE_TEST=$(curl -L -s "https://api.hackertarget.com/hostsearch/?q=${1}" | head -n 1;);
	if [ "${SMOKE_TEST}" == "error check your search parameter" ]; then
		echo -e "\nError in call to \"get_subdomains\"\n  →  Hostname not found:  \"${1}\"\n";
		exit 1;

	else

		# Re-instantiate bash array via unset + declare
		test -v ARR_IPV4_FQDN && unset ARR_IPV4_FQDN;
		test -v ARR_IPV4_FQDN[@] && unset ARR_IPV4_FQDN;
		declare -A ARR_IPV4_FQDN;
		ARR_IPV4_FQDN+=(["Key One"]="Val One");
		ARR_IPV4_FQDN+=(["Key Two"]="Val Two");
		ARR_IPV4_FQDN+=(["Key A"]="Val A");
		ARR_IPV4_FQDN+=(["Key B"]="Val B");

		# Determine (and show) all subdomains and their resolved IPv4 addresses for input domain ( as ${1} )
		curl -L -s "https://api.hackertarget.com/hostsearch/?q=${1}" | sort | while read EACH_LINE; do
			EACH_FQDN=$(echo ${EACH_LINE} | cut -d, -f 1;);
			EACH_IPV4=$(echo ${EACH_LINE} | cut -d, -f 2;);
			EACH_IPV4_RPAD="${EACH_IPV4}$(printf %15s;)";
			EACH_IPV4_RPAD="${EACH_IPV4_RPAD:0:15}";
			echo "   ${EACH_IPV4_RPAD} | ${EACH_FQDN}";
		done;

		echo "";
		echo "   IPv4            | FQDN              ";
		echo "  -----------------|-------------------";
		for DAT_KEY in "${!ARR_IPV4_FQDN[@]}"; do
				DAT_ITEM="${ARR_IPV4_FQDN[${DAT_KEY}]}";
				echo "ARR_IPV4_FQDN[${DAT_KEY}] = ${DAT_ITEM}";
		done;
		echo "";

		exit 0;

	fi;

fi;

# ------------------------------------------------------------