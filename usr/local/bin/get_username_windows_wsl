#!/bin/bash
#
# LOCAL_BIN="/usr/local/bin/get_username_windows_wsl" && echo "" > "${LOCAL_BIN}" && vi "${LOCAL_BIN}" && chmod 0755 "${LOCAL_BIN}";
#

if [ -z "$(uname -r | grep -i 'microsoft')" ]; then
  # Non-WSL (Non Windows-based OS)
  exit 1;
  
else

  DIR_WIN32_USERS=$(find /mnt/*/Users -mindepth 0 -maxdepth 0 -type d 2> /dev/null);

  if [ -n "${DIR_WIN32_USERS}" ] && [ -d "${DIR_WIN32_USERS}" ] && [ $(echo "$(ls ${DIR_WIN32_USERS} | wc -l) > 0" | bc) -eq 1 ]; then
    # Assumed to be a Windows based OS

    Invalid_UsersFile="/tmp/invalid_wsl_hosts_$(date +'%s%N')";
    if [ -f "${Invalid_UsersFile}" ]; then
      rm -f "${Invalid_UsersFile}";
    fi;

    Potential_UsersFile="/tmp/potential_wsl_hosts_$(date +'%s%N')";
    if [ -f "${Potential_UsersFile}" ]; then
      rm -f "${Potential_UsersFile}";
    fi;

    WSL_HostUser_File="/tmp/valid_wsl_hosts_$(date +'%s%N')";
    if [ -f "${Valid_UsersFile}" ]; then
      rm -f "${Valid_UsersFile}";
    fi;
    
    # Make sure required runtime(s) are installed
    if [ -z "$(which bc 2>'/dev/null';)" ]; then
      apt-get-update -y; apt-get install -y bc;
    fi;

    if [ "${1}" == "verbose" ]; then
      echo "";
      echo "Invalid_UsersFile=\"${Invalid_UsersFile}\"";
      echo "Potential_UsersFile=\"${Potential_UsersFile}\"";
      echo "WSL_HostUser_File=\"${WSL_HostUser_File}\"";
    fi;

    find "${DIR_WIN32_USERS}" \
    -mindepth 1 \
    -maxdepth 1 \
    -name '*' \
    -type 'd' \
    -not -path "${DIR_WIN32_USERS}/Default" \
    -not -path "${DIR_WIN32_USERS}/Public" \
    -print0 \
    | while IFS= read -r -d $'\0' EachUserDir; do
      LastExitCode=$([[ -r "${EachUserDir}/Documents" ]]; echo $?);
      if [ "${LastExitCode}" == "0" ]; then
        if [ "${1}" == "verbose" ]; then echo ""; echo "✓ PASS ✓ Can read \"${EachUserDir}\" - Current session has sufficient privilege(s)"; fi;
        echo $(basename "${EachUserDir}") >> "${Potential_UsersFile}";
      else
        if [ "${1}" == "verbose" ]; then echo ""; echo "× FAIL × Cannot read \"${EachUserDir}\" - Current session lacks sufficient privilege(s)"; fi;
        echo $(basename "${EachUserDir}") >> "${Invalid_UsersFile}";
      fi;
    done;
    
    if [ -f "${Potential_UsersFile}" ]; then
      CountMatchedUsers="$(cat ${Potential_UsersFile} | wc -l)";
    else
      CountMatchedUsers="0";
    fi;
    
    if [ $(echo "${CountMatchedUsers} == 1" | bc) -eq 1 ]; then # Matched exactly 1 user
      if [ "${1}" == "verbose" ]; then
        echo "";
        echo "Found [ ${CountMatchedUsers} ] potential WSL hosts-user(s):";
      fi;
      cat "${Potential_UsersFile}";
      exit 0;
    elif [ $(echo "${CountMatchedUsers} > 1" | bc) -eq 1 ]; then # Matched more than 1 user

      if [ "${1}" == "verbose" ]; then
        echo "";
        echo "Found [ ${CountMatchedUsers} ] potential WSL hosts-user(s): ";
        cat "${Potential_UsersFile}";
      fi;

      First_WSL_User="";
      cat "${Potential_UsersFile}" | while read -r EachMatchedUser; do
        DIR_WSL_UBUNTU_ROOTFS=$(find "/mnt/"*"/Users/${EachMatchedUser}/AppData/Local/Packages/"*"Ubuntu"*"/LocalState/rootfs" -mindepth 0 -maxdepth 0 -type d 2> /dev/null);
        if [ -n "${DIR_WSL_UBUNTU_ROOTFS}" ] && [ -d "${DIR_WSL_UBUNTU_ROOTFS}" ]; then
          if [ "${1}" == "verbose" ]; then
            echo "";
            echo "Host User \"${EachMatchedUser}\" has the Ubuntu WSL directory in their Home-Directory: ";
            echo " |--> \"${DIR_WSL_UBUNTU_ROOTFS}\"";
          fi;
          if [ ! -f "${WSL_HostUser_File}" ]; then
            echo -n "${EachMatchedUser}" > "${WSL_HostUser_File}"; # output the first WSL user to-be-identified
          fi;
        fi;
      done;

      if [ -f "${WSL_HostUser_File}" ]; then
        cat "${WSL_HostUser_File}";
      fi;
      if [ "${1}" == "verbose" ]; then
        echo "";
      fi;

      exit 0;

    else
      echo "";
      echo "Error: No directories found matching [ ${DIR_WIN32_USERS}/*/Documents ]";
      exit 1;

    fi;
    if [ "${1}" == "verbose" ]; then
      echo "";
    fi;

  else
    # Assumed to be a NON-Windows based OS
    echo "Info: Directory not-found/empty: \"${DIR_WIN32_USERS}\"";
    echo "Info: Assuming that this is a Non-Windows based OS";
    exit 1;

  fi;

fi;



# ------------------------------------------------------------
#
# Citation(s)
# 
#   stackoverflow.com  |  "How do I use a for-each loop to iterate over file paths in bash?"  |  https://stackoverflow.com/a/15066129
#
# ------------------------------------------------------------
