#!/bin/bash
#
# LOCAL_SBIN="/usr/local/sbin/install_kdump" && echo "" > "${LOCAL_SBIN}" && vi "${LOCAL_SBIN}" && chmod 0755 "${LOCAL_SBIN}";
#
# ------------------------------------------------------------
if [ 0 -eq 1 ]; then # RUN THIS SCRIPT


wget "https://raw.githubusercontent.com/mcavallo-git/cloud-infrastructure/master/usr/local/sbin/install_kdump" -O "/usr/local/sbin/install_kdump" -q && chmod 0755 "/usr/local/sbin/install_kdump" && /usr/local/sbin/install_kdump;


fi;
# ------------------------------------------------------------
#
# Script must run as root or via sudo
#
if [ "$(id -un)" != "root" ]; then
	echo "";
	echo "$(date +'%Y-%m-%d %H:%M:%S') | Error: Script must run as user \"root\" or via \"sudo\" command";
	exit 1;
else
	# ------------------------------------------------------------
	#
	# Install/setup kernel crash dump logging for use during RCA auditing workflows
	#
	SERVICE_NAME="kdump";

	#	Search for one, specific service
	SERVICE_RET_CODE=$(/usr/sbin/service "${SERVICE_NAME}" status --no-pager --full 1>'/dev/null' 2>&1; echo $?;);
	echo "------------------------------------------------------------";
	if [ ${SERVICE_RET_CODE} -eq 0 ]; then # Service FOUND locally
		echo "";
		echo "Info:  Service \"kdump\" found to exist locally (skipping package-install)";
		/usr/sbin/service "${SERVICE_NAME}" status --no-pager --full;
	else # Service NOT found locally
		echo "";
		echo "Warning:  Service \"${SERVICE_NAME}\" not found locally";
		echo "";
		echo "Info:  Attempting to install the \"kdump\" package (for kernel crash dump logging) ...";
		if [ $(which kdump 2>'/dev/null' | wc -l;) -eq 0 ]; then
			if [ $(which apt 2>'/dev/null' | wc -l;) -gt 0 ]; then # Distros: Debian, Ubuntu, etc.
				apt-get -y install linux-crashdump;
			elif [ $(which yum 2>'/dev/null' | wc -l;) -gt 0 ]; then # Distros: Fedora, Oracle Linux, Red Hat Enterprise Linux, CentOS, etc.
				yum -y install kexec-tools;
			fi;
		fi;
	fi;

	# Verify that taget service is enabled
	if [ "$(systemctl is-enabled ${SERVICE_NAME} > /dev/null 2>&1; echo $?;)" == "0" ]; then
		echo "Info:  Service \"kdump\" is enabled (skipping enable-service)";
	else
		echo "Warning:  Service \"kdump\" is not enabled --> Enabling it, now...";
		systemctl enable ${SERVICE_NAME};
	fi;

	# Verify that taget service is active
	if [ "$(systemctl is-active ${SERVICE_NAME} > /dev/null 2>&1; echo $?;)" == "0" ]; then
		echo "Info:  Service \"kdump\" is active (skipping start-service)";
	else
		echo "Warning:  Service \"kdump\" is not active --> Starting it, now...";
		systemctl start ${SERVICE_NAME};
	fi;

	if [ -f "/etc/sysctl.conf" ]; then
		# Enable fallback/backup crash logging via the built-in "sadump" mechanism (in-case any unexpected issues arise with kdump down the road)
		if [ $(grep '^kernel.panic=0' '/etc/sysctl.conf' 1>/dev/null 2>&1; echo $?;) -eq 0 ]; then
			# Let user knos config was already setup correctly
			echo "Info:  Skipping Update 1/2 for config file \"/etc/sysctl.conf\" as it already contains \"kernel.panic=0\" (calls fallback mechanism 'sadump' in case kdump happens to go missing during a kernel panic)";
		else
			# Remove lines containing "kernel.panic" in the config file
			sed -i".$(date +'%Y%m%d_%H%M%S').bak" -e "/^kernel.panic/c\ " "/etc/sysctl.conf";
			# Remove whitespace-only (empty) lines
			sed_remove_whitespace_lines='/^\s*$/d'; sed -i".$(date +'%Y%m%d_%H%M%S').bak" -e "${sed_remove_whitespace_lines}" "/etc/sysctl.conf";
			# Add the kernel.panic directive to the config file as-intended
			echo "kernel.panic=0" >> "/etc/sysctl.conf";
		fi;
		if [ $(grep '^kernel.unknown_nmi_panic=1' '/etc/sysctl.conf' 1>/dev/null 2>&1; echo $?;) -eq 0 ]; then
			# Let user knos config was already setup correctly
			echo "Info:  Skipping Update 2/2 for config file \"/etc/sysctl.conf\" as it already contains \"kernel.unknown_nmi_panic=1\"";
		else
			# Remove lines containing "kernel.panic" in the config file
			sed -i".$(date +'%Y%m%d_%H%M%S').bak" -e "/^kernel.unknown_nmi_panic/c\ " "/etc/sysctl.conf";
			# Remove whitespace-only (empty) lines
			sed_remove_whitespace_lines='/^\s*$/d'; sed -i".$(date +'%Y%m%d_%H%M%S').bak" -e "${sed_remove_whitespace_lines}" "/etc/sysctl.conf";
			# Add the kernel.panic directive to the config file as-intended
			echo "kernel.unknown_nmi_panic=1" >> "/etc/sysctl.conf";
		fi;

	fi;

fi;


# ------------------------------------------------------------
#
# Citation(s)
#
#   access.redhat.com  |  "Chapter 7. Kernel crash dump guide Red Hat Enterprise Linux 7 | Red Hat Customer Portal"  |  https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/kernel_administration_guide/kernel_crash_dump_guide
#
#   help.ubuntu.com  |  "Kernel Crash Dump"  |  https://help.ubuntu.com/lts/serverguide/kernel-crash-dump.html
#
#   linux.die.net  |  "parted(8): partition change program - Linux man page"  |  https://linux.die.net/man/8/parted
#
#   opensource.com  |  "How to partition a disk in Linux | Opensource.com"  |  https://opensource.com/article/18/6/how-partition-disk-linux
#
#   unix.stackexchange.com  |  "mount - Is there a command to see where a disk is mounted? - Unix & Linux Stack Exchange"  |  https://unix.stackexchange.com/a/34772
#
# ------------------------------------------------------------